name: Build and Push Docker Image

on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main
    workflow_dispatch:
    schedule:
        # Weekly build to ensure the image stays fresh with security updates
        - cron: '0 3 * * 1'

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                tags: |
                    # Set latest tag for main branch
                    type=raw,value=latest,enable={{is_default_branch}}
                    # Set edge tag for main branch
                    type=edge,branch=main
                    # Git short SHA
                    type=sha,prefix={{branch}}-
                    # Date-based tag
                    type=schedule,pattern={{date 'YYYYMMDD'}}
                    # Semantic versioning (if using tags)
                    type=semver,pattern={{version}}
                    type=semver,pattern={{major}}.{{minor}}
                    type=semver,pattern={{major}}
                labels: |
                    org.opencontainers.image.title=ARMCortexM-CppLib Development Environment
                    org.opencontainers.image.description=Docker image with preinstalled dev tools for ARM Cortex-M development
                    org.opencontainers.image.vendor=Matej Gomboc
                    maintainer=Matej Gomboc <https://github.com/MatejGomboc>

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                context: .
                platforms: linux/amd64,linux/arm64
                push: ${{ github.event_name != 'pull_request' }}
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max
                build-args: |
                    BUILDKIT_CONTEXT_KEEP_GIT_DIR=1

            # - name: Generate artifact attestation
            #   if: github.event_name != 'pull_request'
            #   uses: actions/attest-build-provenance@v1
            #   with:
            #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            #     subject-digest: ${{ steps.build.outputs.digest }}
            #     push-to-registry: true
